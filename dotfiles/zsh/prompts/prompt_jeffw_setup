#
# A two-line theme using Powerline symbols with some extra features.
#
# Authors:
#   Jeff Workman <jeff.workman@gmail.com>
#   Some features adapted from themes: giddie, paradox
#
# Features:
#   - Full use of Powerline symbols in prompt
#   - 24-bit color or 256-color when supported
#   - Username/hostname in prompt
#   - Full working directory in prompt
#   - Git status: branch, staged, unstaged, untracked, commits ahead/behind
#   - Current time in prompt (right side)
#   - Last command exit status is displayed when non-zero (one time only)
#   - Prints elapsed time for long-running commands (one time only)
#
# Screenshots:
#   http://i.imgur.com/rCo3S.png
#

_prompt_jeffw_arrow_left=$'\ue0b2'
# _prompt_jeffw_arrow_left_outline=$'\ue0b3'
_prompt_jeffw_arrow_right=$'\ue0b0'
# _prompt_jeffw_arrow_right_outline=$'\ue0b1'
_prompt_jeffw_rounded_left=$'\ue0b6'
_prompt_jeffw_rounded_right=$'\ue0b4'

_prompt_jeffw_cmd_start=0
_prompt_jeffw_start_time=$SECONDS

_prompt_jeffw_gray0='53;53;53'
_prompt_jeffw_gray1='62;62;62'
_prompt_jeffw_gray2='72;72;72'
_prompt_jeffw_time_bg=$_prompt_jeffw_gray1

function fg_rgb() { print $'%{\e[38;2;'"${1}"$'m%}' }
function fg_reset() { print $'\e[0m%f' }
function bg_rgb() { print $'%{\e[48;2;'"${1}"$'m%}' }
function bg_reset() { print $'\e[0m%k' }

function +vi-set_novcs_prompt_symbol {
  _prompt_jeffw_symbol=''
}

function +vi-set_vcs_prompt_symbol {
  _prompt_jeffw_symbol='±'
}

function prompt_jeffw_print_elapsed_time {
  local end_time=$(( SECONDS - _prompt_jeffw_start_time ))
  local hours minutes seconds remainder

  if (( end_time >= 5 )); then
    hours=$(( end_time / 3600 ))
    remainder=$(( end_time % 3600 ))
    minutes=$(( remainder / 60 ))
    seconds=$(( remainder % 60 ))

    # print -Pn "%B%F{green}>>> elapsed time "
    print -Pn '%b%F{green}'$(bg_rgb ${_prompt_jeffw_gray0})'%B Elapsed Time %b'$(fg_rgb ${_prompt_jeffw_gray0})''$(bg_rgb ${_prompt_jeffw_gray2})${_prompt_jeffw_arrow_right}'%f'$(bg_rgb ${_prompt_jeffw_gray2})'%B%F{green} '
    if (( hours >= 1 )); then
      print -Pn "${hours}h"
    fi
    if (( minutes >= 1 )) || (( hours >= 1 )) ; then
      print -Pn "${minutes}m"
    fi
    print -Pn "${seconds}s"
    print -P "$(bg_rgb ${_prompt_jeffw_gray2}) %k$(fg_rgb ${_prompt_jeffw_gray2})${_prompt_jeffw_rounded_right}%f"
  fi
}

function prompt_jeffw_preexec {
  # echo "$1 $2 $3"
  _prompt_jeffw_start_time="$SECONDS"
  _prompt_jeffw_cmd_start=1
}

function _prompt_jeffw_open_round {
  print -Pn "$(fg_rgb ${_prompt_jeffw_gray1})%k${_prompt_jeffw_rounded_left}%k%f$(bg_rgb ${_prompt_jeffw_gray1})"
}

function _prompt_jeffw_close_round {
  print -Pn "%k%f$(fg_rgb ${_prompt_jeffw_gray1})%k${_prompt_jeffw_rounded_right}%k%f"
}

function _prompt_jeffw_rounded_block {
  local content="$*"
  # ${_prompt_jeffw_colors[3]}
  print -Pn ''$(_prompt_jeffw_open_round)' '${content}' '$(_prompt_jeffw_close_round)
}

function _prompt_jeffw_nix_shell {
  if [[ ! -z "$IN_NIX_SHELL" ]] ; then
    _prompt_jeffw_rounded_block '%B%F{208}nix-shell%f'
    print -Pn ' %b'
  fi
}

function _prompt_jeffw_ssh {
  if [[ ! -z "$SSH_CLIENT" ]] ; then
    print -Pn "${_prompt_jeffw_colors[1]}ssh://%f"
  fi
}

function prompt_jeffw_precmd {
  exit="$?"

  local ahead_behind remote_status vcsh
  vcsh="$VCSH_REPO_NAME"

  ahead_behind=$(git status --porcelain=v2 --branch 2> /dev/null |
                   grep -e '^# branch.ab' |
                   sed -Ee 's/# branch.ab //g' |
                   grep -v '+0 -0')

  if [[ "$ahead_behind" == "" ]] ; then
    remote_status=""
  else
    ahead_behind=$(echo "$ahead_behind" | sed -Ee 's/\+0 //g' | sed -Ee 's/ \-0//g')
    # remote_status=" %F{7}(%f %F{13}$ahead_behind%f %F{7})%f"
    remote_status=" %F{13}${ahead_behind}%f"
  fi

  local vcs_open vcs_close vcs_branch git_ls_opts content
  vcs_open="$(fg_rgb ${_prompt_jeffw_gray1})%k"$_prompt_jeffw_rounded_left"%k%f$(bg_rgb ${_prompt_jeffw_gray1}) "
  vcs_close=" %k%f$(fg_rgb ${_prompt_jeffw_gray1})%k"$_prompt_jeffw_rounded_right"%k%f"
  if [[ ! -z "$vcsh" ]] ; then
    vcs_branch="${_prompt_jeffw_colors[1]}[$vcsh] %b%f"
  else
    vcs_branch="${_prompt_jeffw_colors[1]}%b%f"
  fi
  if [[ ! -n $(git status --porcelain 2> /dev/null) ]]; then
    branch_format="${vcs_open}${vcs_branch}${remote_status}${vcs_close}"
    # content="${vcs_branch}${remote_status}"
  else
    branch_format="${vcs_open}${vcs_branch} %u%c${remote_status}${vcs_close}"
    # content="${vcs_branch} %u%c${remote_status}"
  fi
  if [[ -z "$vcsh" ]] ; then
    if [[ -n $(git ls-files --other --exclude-standard 2> /dev/null) ]]; then
      branch_format="${vcs_open}${vcs_branch} %u%c${_prompt_jeffw_colors[4]}●%f${remote_status}${vcs_close}"
      # content="${vcs_branch} %u%c${_prompt_jeffw_colors[4]}●%f${remote_status}"
    fi
  fi
  # branch_format="$(_prompt_jeffw_rounded_block $content)"

  zstyle ':vcs_info:*:prompt:*' formats "${branch_format}"

  # Replace '/home/<user>' with '~'.
  _prompt_jeffw_pwd="${PWD/#$HOME/~}"
  vcs_info 'prompt'

  if [[ $_prompt_jeffw_cmd_start == 1 ]] ; then
    prompt_jeffw_print_elapsed_time

    if [[ $exit != 0 ]] ; then
      # print -P "%F{9}%B-> [$exit]%b%f"
      local exit_open='%b%F{9}'$(bg_rgb ${_prompt_jeffw_gray0})' Status '$(fg_rgb ${_prompt_jeffw_gray0})''$(bg_rgb ${_prompt_jeffw_gray2})${_prompt_jeffw_arrow_right}'%f'$(bg_rgb ${_prompt_jeffw_gray2})' '
      local exit_status="%B%F{9}$(bg_rgb ${_prompt_jeffw_gray2})${exit}%b%f"
      local exit_close="$(bg_rgb ${_prompt_jeffw_gray2}) %k$(fg_rgb ${_prompt_jeffw_gray2})${_prompt_jeffw_rounded_right}%f"
      print -P ${exit_open}${exit_status}${exit_close}
    fi
  fi

  _prompt_jeffw_cmd_start=0
}

function prompt_jeffw_post_prompt {
}

function prompt_jeffw_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  # Load required functions.
  autoload -Uz vcs_info
  autoload -Uz add-zsh-hook

  # Add hook to set up prompt parameters before each command.
  add-zsh-hook preexec prompt_jeffw_preexec
  add-zsh-hook precmd prompt_jeffw_precmd

  if [[ $TERM = *256color* || $TERM = *rxvt* ]]; then
    _prompt_jeffw_colors=(
      "%F{4}"  # Turquoise
      "%F{3}" # Orange
      "%F{135}" # Purple
      "%F{5}" # Hotpink
      "%F{10}" # Limegreen
    )
  else
    _prompt_jeffw_colors=(
      "%F{cyan}"
      "%F{yellow}"
      "%F{magenta}"
      "%F{red}"
      "%F{green}"
    )
  fi

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:completing' format '%F{green}...%f'
  zstyle ':prezto:module:editor:info:keymap:alternate' format '%F{yellow}--- COMMAND ---%f'

  # Formats:
  #   %b - branchname
  #   %u - unstagedstr (see below)
  #   %c - stagedstr (see below)
  #   %a - action (e.g. rebase-i)
  #   %R - repository path
  #   %S - path in the repository
  local branch_format="(${_prompt_jeffw_colors[1]} %b%f %u%c)"
  local action_format="%F{7}( ${_prompt_jeffw_colors[5]}%a %F{7})%f"
  local unstaged_format="${_prompt_jeffw_colors[2]}●%f"
  local staged_format="${_prompt_jeffw_colors[5]}●%f"

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:keymap:primary' format '$'

  # Set vcs_info parameters.
  zstyle ':vcs_info:*' enable bzr git hg svn
  zstyle ':vcs_info:*:prompt:*' check-for-changes true
  zstyle ':vcs_info:*:prompt:*' unstagedstr "${unstaged_format}"
  zstyle ':vcs_info:*:prompt:*' stagedstr "${staged_format}"
  zstyle ':vcs_info:*:prompt:*' actionformats "${branch_format} ${action_format}"
  zstyle ':vcs_info:*:prompt:*' formats "${branch_format}"
  zstyle ':vcs_info:*:prompt:*' nvcsformats ""

  # Set vcs_info hooks.
  # NOTE: Prior to Zsh v4.3.12, there are no static hooks, no vcs_info_hookadd
  #       function, and no 'no-vcs' hook.
  zstyle ':vcs_info:*+start-up:*' hooks set_novcs_prompt_symbol
  zstyle ':vcs_info:*+set-message:*' hooks set_vcs_prompt_symbol

  # Define prompts.
  # PROMPT='%F{5}%n%f@%F{yellow}%m%f|%F{green}${_prompt_jeffw_pwd}%f ${vcs_info_msg_0_}
  local symbol_color="55;95;175"
  # local prompt_symbol='%F{blue}${_prompt_jeffw_symbol}%f '
  # local prompt_symbol="%K{236}%F{235} %F{236}$(bg_rgb ${symbol_color})${_prompt_jeffw_arrow_right}$(fg_rgb ${symbol_color})%k${_prompt_jeffw_arrow_right}%k%f"
  local prompt_symbol="%F{236}%K{236} %F{236}%K{238}${_prompt_jeffw_arrow_right} %F{238}$(bg_rgb ${symbol_color})${_prompt_jeffw_arrow_right}$(fg_rgb ${symbol_color})%k${_prompt_jeffw_arrow_right}%k%f"
  local main_open='%F{236}%K{236} %K{238}%F{236}'${_prompt_jeffw_arrow_right}'%f%K{238} '
  local main_close=" %k%f$(fg_rgb ${_prompt_jeffw_gray1})%k"${_prompt_jeffw_rounded_right}"%k%f"
  local main_to_pwd=' %F{238}$(bg_rgb ${_prompt_jeffw_gray1})'${_prompt_jeffw_arrow_right}'%f '
  local prompt_main='$(_prompt_jeffw_ssh)%F{5}%n%f@%F{yellow}%m%f'
  local prompt_pwd='%F{green}${_prompt_jeffw_pwd}%f'
  local prompt_slice=""
  if [[ ! -z "$SLICE" ]] ; then
    prompt_slice=' %F{3}['${SLICE}']%f'
  fi
  PROMPT="${main_open}${prompt_main}${main_to_pwd}${prompt_pwd}${main_close}${prompt_slice}"' $(_prompt_jeffw_nix_shell)${vcs_info_msg_0_}
'"${prompt_symbol} "'$(prompt_jeffw_post_prompt)'

  local time_bg='60;60;60'
  local time_open="%k$(fg_rgb ${_prompt_jeffw_time_bg})${_prompt_jeffw_rounded_left}$(bg_rgb ${_prompt_jeffw_time_bg})%f "
  local time_close=" $(fg_rgb ${_prompt_jeffw_time_bg})%k"${_prompt_jeffw_rounded_right}"%k%f"
  RPROMPT='${editor_info[keymap]}  '${time_open}'%F{green}%D{%l:%M %p}'${time_close}
  SPROMPT='zsh: correct %F{magenta}%R%f to %F{green}%r%f [nyae]? '
}

prompt_jeffw_setup "$@"
